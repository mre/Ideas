JavaScript as a first programming language Book
  Layout: 
    Plain markdown files
    CSS classes as tags, for instance: 
      { #note }, { #developer }
    Rendering script for the web
  Language: Coffeescript
    It grows with your abilities(Functional aspects)
  Topics:
    Simple introduction
      About me
        Why I love programming
          Coding someting is more fun than using it (even games).
          Automating stuff gives you superhero strength
          Teach a piece of metal how to do stuff.
          Elegant, creative solutions
        How I learned to program
        What you need
          Patience 
            Learning any skill needs time. A lot of time.
            Fortunately you learn while doing cool things.
          Curiosity
          Creativity
    Starting right away
      Setup
        Online REPL
      Question game
        Printing Strings
        Reading Strings
    Datatypes
      Working with Arrays
        Game: Mastermind
    Libraries and reusable code
      Setup
        Prepackaged IDE (sandbox) for Desktop
        Node.js
        Coffescript
      A working app: Editor
        Opening files
        Writing files
      Address Manager
        Parsing files
        Objects
    The web
      Setup
        JQuery
      Modifying a website
      Creating a website
    GUIs
      Cappucino
      Titanium
      Cocoa JS bindings
    Being creative
      Standing on the shoulders of giants
      Drawing with Processing.js Raphael
      Video Processing on Canvas
    Where to go from here
      Learn how to use an editor
      Learn a version control system
      Learn other languages
        Why?
        One other scripting language: Python, Ruby, Groovy
        One systems language: C
        One low-level language: Brainfuck, Assembler
        One functional language: Lisp
      Learn from great developers
        Read code from others
        Fork projects, commit changes, pull requests
      Contribute to an open community
        Why this book can exist (because of open source software)
        Whenever possible, share your code. It is for all our benefit.
      Stay away from evangelists
        TDD, refactoring, design patterns are great but no eternal truth
    Appendix
      Philosophy
        Tell only the things you urgently need to know
        Explain the problem, make errors and come back to the solution
        Elegant code
        Make it platform independent
      How to contribute
      References
        https://github.com/jashkenas/coffee-script/wiki/In-The-Wild
